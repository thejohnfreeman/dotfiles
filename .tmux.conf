# index windows and panes like vim tabs, next to `
set -g base-index 1
setw -g pane-base-index 1

# space is our leader
unbind C-b
set -g prefix C-Space

bind r   source-file ~/.tmux.conf
bind C-r source-file ~/.tmux.conf

# use vi bindings
setw -g mode-keys vi
# do not hold up vim
set -sg escape-time 0

# make copy-mode similar to vim normal-mode
bind                Space   copy-mode \; send '0'
bind                C-Space copy-mode \; send '0'
bind -Tcopy-mode-vi v       send -X begin-selection
bind -Tcopy-mode-vi C-v     send -X rectangle-toggle
# bind -Tcopy-mode-vi y       send -X copy-selection-and-cancel
# bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel
bind -Tcopy-mode-vi y       send -X copy-pipe-and-cancel 'pbcopy'
bind -Tcopy-mode-vi Enter   send -X copy-pipe-and-cancel 'pbcopy'
# mimic Linux and copy text on mouse selection
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'pbcopy'
# bind                p       paste-buffer
bind                p       run 'pbpaste | tmux load-buffer -; tmux paste-buffer'

# create panes
bind _ split-window -v -c '#{pane_current_path}' -p 25
bind | split-window -h -c '#{pane_current_path}'

# create windows
bind t   break-pane
bind C-t break-pane

bind n   new-window -c '#{pane_current_path}'
bind C-n new-window -c '#{pane_current_path}'

# destroy panes
bind q   kill-pane
bind C-q kill-pane

# destroy windows
bind c   kill-window
bind C-c kill-window

# resize panes
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5

# swap panes
bind -n C-Up   swap-pane -U
bind -n C-Down swap-pane -D

# switch windows
bind -n C-Left  previous-window
bind -n C-Right next-window

# smart pane switching with awareness of vim splits
# 1. https://gist.github.com/mislav/5189704
# 2. https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# 3. http://www.codeography.com/2013/06/19/navigating-vim-and-tmux-splits
# 4. https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# "suspend" a session
bind z   detach
bind C-z detach

set -g default-terminal   'screen-256color'
set -g terminal-overrides 'xterm:colors=256'
set -g set-titles         on

setw -g aggressive-resize on
#setw -g mode-mouse on

setw -g monitor-activity on
# just highlight the window name, no need to flash a message
set -g visual-activity off

setw -g automatic-rename on
setw -g automatic-rename-format '[#T #{pane_current_command}]'

# status bar
# left is tmux context (host, session, window)
# right is machine (time)
set -g status-bg black
set -g status-fg white
set -g status-left-length 20
set -g status-left '#[fg=blue]#{session_name}@#{host}'
set -g status-right-length 64
set -g status-right '#[fg=blue]#{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}%Y-%b-%d %H:%M'
setw -g window-status-current-style 'bg=red'
